// <auto-generated />
using System;
using AMMasterProject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AMMasterProject.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230705071732_addinsertdateAdsDetailModel")]
    partial class addinsertdateAdsDetailModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AMMasterProject.AdsDetail", b =>
                {
                    b.Property<int>("AdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdId"));

                    b.Property<int>("AdsPageId")
                        .HasColumnType("int");

                    b.Property<int>("AdsPlacementId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsUrl")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("URL");

                    b.HasKey("AdId");

                    b.ToTable("Ads_Detail");
                });

            modelBuilder.Entity("AMMasterProject.Alphabet", b =>
                {
                    b.Property<string>("Alphabet1")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Alphabet");

                    b.Property<int>("Alphabetid")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("Alphabet");
                });

            modelBuilder.Entity("AMMasterProject.AnnouncementNotification", b =>
                {
                    b.Property<int>("AnnouncementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AnnouncementId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnnouncementId"));

                    b.Property<string>("AnnouncementFor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AnnouncementFor");

                    b.Property<Guid>("AnnouncementGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnnouncementGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpiryDate");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublish");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Title");

                    b.HasKey("AnnouncementId");

                    b.ToTable("AnnouncementNotification");
                });

            modelBuilder.Entity("AMMasterProject.BlogCategory", b =>
                {
                    b.Property<int>("BlogCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BlogCategoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogCategoryId"));

                    b.Property<string>("BlogCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BlogCategoryName");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.HasKey("BlogCategoryId");

                    b.ToTable("BlogCategory");
                });

            modelBuilder.Entity("AMMasterProject.Blogging", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<int>("Categoryid")
                        .HasColumnType("int")
                        .HasColumnName("categoryid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Externalurl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("externalurl");

                    b.Property<string>("Fileattached")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Fileattached");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Image");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<bool>("Isaddonhomepage")
                        .HasColumnType("bit")
                        .HasColumnName("isaddonhomepage");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEODescription");

                    b.Property<string>("SeoKeyword")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEOKeyword");

                    b.Property<string>("SeoPageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOPageName");

                    b.Property<string>("SeoTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOTitle");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Summary");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("isfeatured")
                        .HasColumnType("bit")
                        .HasColumnName("isfeatured");

                    b.HasKey("BlogId");

                    b.ToTable("Bloging");
                });

            modelBuilder.Entity("AMMasterProject.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandImage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("BrandName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BrandUrlpath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("BrandURLPath");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Category_Id");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("AMMasterProject.Career", b =>
                {
                    b.Property<int>("CareerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CareerId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CareerId"));

                    b.Property<Guid>("CareerGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CareerGuid");

                    b.Property<int>("Categoryid")
                        .HasColumnType("int")
                        .HasColumnName("categoryid");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Externalurl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("externalurl");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<bool>("Isaddonhomepage")
                        .HasColumnType("bit")
                        .HasColumnName("isaddonhomepage");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEODescription");

                    b.Property<string>("SeoKeyword")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEOKeyword");

                    b.Property<string>("SeoPageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOPageName");

                    b.Property<string>("SeoTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOTitle");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Summary");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CareerId");

                    b.ToTable("Careers");
                });

            modelBuilder.Entity("AMMasterProject.CareerApplication", b =>
                {
                    b.Property<int>("CareerApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CareerApplicationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CareerApplicationId"));

                    b.Property<int?>("ApplicationStatus")
                        .HasColumnType("int")
                        .HasColumnName("ApplicationStatusId");

                    b.Property<Guid>("CareerGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CareerGuid");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.HasKey("CareerApplicationId");

                    b.ToTable("CareerApplication");
                });

            modelBuilder.Entity("AMMasterProject.CareerCategory", b =>
                {
                    b.Property<int>("CareerCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CareerCategoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CareerCategoryId"));

                    b.Property<string>("CareerCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CareerCategoryName");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.HasKey("CareerCategoryId");

                    b.ToTable("CareerCategory");
                });

            modelBuilder.Entity("AMMasterProject.CategoryMaster", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Banner")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("category_name");

                    b.Property<int?>("CategoryTypeId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("CategoryTypeId");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<string>("Icon")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsIncludeMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowHomePage")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ParentCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("parent_category_id");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEODescription");

                    b.Property<string>("SeoKeyword")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEOKeyword");

                    b.Property<string>("SeoPageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOTitle");

                    b.Property<int>("Sortnumber")
                        .HasColumnType("int")
                        .HasColumnName("Sortnumber");

                    b.Property<string>("Urlpath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("URLPath");

                    b.HasKey("CategoryId");

                    b.ToTable("category_master");
                });

            modelBuilder.Entity("AMMasterProject.CompanySetup", b =>
                {
                    b.Property<int>("CompanySetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanySetupId"));

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CompanyAddress");

                    b.Property<string>("CompanyDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CompanyDescription");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CompanyName");

                    b.Property<string>("Favicon")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Favicon");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Logo");

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MetaDescription");

                    b.Property<string>("MetaKeyword")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MetaKeyword");

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MetaTitle");

                    b.Property<string>("SupportContact")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SupportContact");

                    b.Property<string>("SupportEmail")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("SupportEmail");

                    b.HasKey("CompanySetupId");

                    b.ToTable("CompanySetup");
                });

            modelBuilder.Entity("AMMasterProject.ContactMaster", b =>
                {
                    b.Property<int>("ContactMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactMasterId"));

                    b.Property<Guid?>("ContactMasterGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ContactMasterGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Message")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ContactMasterId");

                    b.ToTable("Contact_Master");
                });

            modelBuilder.Entity("AMMasterProject.Country", b =>
                {
                    b.Property<int>("Countryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Countryid"));

                    b.Property<string>("CountryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Image")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("InsertBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Countryid");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("AMMasterProject.CountryCode", b =>
                {
                    b.Property<int>("Cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cid"));

                    b.Property<bool>("CActive")
                        .HasColumnType("bit")
                        .HasColumnName("cActive");

                    b.Property<string>("Ccode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CCode");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("countryName");

                    b.Property<string>("Countrycode1")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("countrycode");

                    b.Property<string>("Currencycode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("currencycode");

                    b.Property<byte[]>("Flag")
                        .HasColumnType("image");

                    b.Property<string>("Flagpath")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("flagpath");

                    b.Property<bool?>("Isbuyeractive")
                        .HasColumnType("bit")
                        .HasColumnName("isbuyeractive");

                    b.Property<bool?>("Isselleractive")
                        .HasColumnType("bit")
                        .HasColumnName("isselleractive");

                    b.HasKey("Cid");

                    b.ToTable("COUNTRY_code");
                });

            modelBuilder.Entity("AMMasterProject.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyId"));

                    b.Property<string>("CurrencyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("AMMasterProject.CustomerAddress", b =>
                {
                    b.Property<int>("CustomerAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerAddressId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("CustomerAddressGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerAddressGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Zipcode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CustomerAddressId");

                    b.ToTable("Customer_Address");
                });

            modelBuilder.Entity("AMMasterProject.CustomerWishlist", b =>
                {
                    b.Property<int>("WishlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WishlistId"));

                    b.Property<string>("Cwgroupname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("cwgroupname");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IP");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasMaxLength(256)
                        .HasColumnType("int");

                    b.HasKey("WishlistId");

                    b.ToTable("Customer_Wishlist");
                });

            modelBuilder.Entity("AMMasterProject.DonationMaster", b =>
                {
                    b.Property<int>("RequestFundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestFundId"));

                    b.Property<string>("AdminRemarks")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool?>("AdminStatus")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Administrativefee")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PaypalId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("PaypalID");

                    b.Property<Guid?>("RequestFundGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RequestFundGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Title")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("RequestFundId");

                    b.ToTable("Donation_Master");
                });

            modelBuilder.Entity("AMMasterProject.DonationReceived", b =>
                {
                    b.Property<int>("DonationReceivedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DonationReceivedId"));

                    b.Property<decimal?>("AdministrativeAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("AdministrativeFeesPer")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaypalId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid?>("RequestFundGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RequestFundGUID");

                    b.HasKey("DonationReceivedId");

                    b.ToTable("Donation_Received");
                });

            modelBuilder.Entity("AMMasterProject.EcollabPostComment", b =>
                {
                    b.Property<int>("EcollabCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EcollabCommentId"));

                    b.Property<string>("Comment")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<int?>("EcollabReferenceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<bool?>("Readstatus")
                        .HasColumnType("bit")
                        .HasColumnName("readstatus");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EcollabCommentId");

                    b.ToTable("Ecollab_Post_Comment");
                });

            modelBuilder.Entity("AMMasterProject.EcollabPostLike", b =>
                {
                    b.Property<int>("EcollablikeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EcollablikeId"));

                    b.Property<int?>("EcollabReferenceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<bool?>("Readstatus")
                        .HasColumnType("bit")
                        .HasColumnName("readstatus");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EcollablikeId");

                    b.ToTable("Ecollab_Post_Like");
                });

            modelBuilder.Entity("AMMasterProject.EcollabPostQuestion", b =>
                {
                    b.Property<int>("EcollabPostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EcollabPostId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EcollabPostGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EcollabPostGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Image")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("image");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<int?>("ModuleReferenceId")
                        .HasColumnType("int")
                        .HasColumnName("ModuleReferenceID");

                    b.Property<string>("ModuleReferenceType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Postview")
                        .HasColumnType("int")
                        .HasColumnName("postview");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("Subcatid")
                        .HasColumnType("int")
                        .HasColumnName("subcatid");

                    b.Property<string>("Tags")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("EcollabPostId");

                    b.ToTable("Ecollab_Post_Question");
                });

            modelBuilder.Entity("AMMasterProject.EmailSetup", b =>
                {
                    b.Property<int>("EmailSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmailSettingId"));

                    b.Property<string>("Bcc")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("BCC");

                    b.Property<string>("EmailFrom")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool?>("Enablessl")
                        .HasColumnType("bit");

                    b.Property<string>("Host")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Password")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("Smtpport")
                        .HasColumnType("int")
                        .HasColumnName("SMTPPort");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmailSettingId");

                    b.ToTable("Email_Setup");
                });

            modelBuilder.Entity("AMMasterProject.EmailSetupContent", b =>
                {
                    b.Property<int>("EmailTextId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmailTextID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmailTextId"));

                    b.Property<string>("EmailText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("Subject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmailTextId");

                    b.ToTable("Email_Setup_Content");
                });

            modelBuilder.Entity("AMMasterProject.EmailSetupNotification", b =>
                {
                    b.Property<int>("EmailNotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmailNotificationId"));

                    b.Property<string>("EmailBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Isemailsent")
                        .HasColumnType("bit");

                    b.Property<bool?>("Ismobilenotificationsent")
                        .HasColumnType("bit")
                        .HasColumnName("ismobilenotificationsent");

                    b.Property<string>("MobileNotification")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("RedirectUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("RedirectURL");

                    b.Property<int?>("ReferenceId")
                        .HasColumnType("int")
                        .HasComment("Registration(Profileid) or OrderID (Order Confirmation) or OrderStatusid (order status change)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmailNotificationId");

                    b.ToTable("Email_Setup_Notifications");
                });

            modelBuilder.Entity("AMMasterProject.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Categoryid")
                        .HasColumnType("int")
                        .HasColumnName("categoryid");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("EventEndDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("EventEndTime")
                        .HasColumnType("time");

                    b.Property<string>("EventImage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("EventImage");

                    b.Property<DateTime?>("EventStartDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("EventStartTime")
                        .HasColumnType("time");

                    b.Property<string>("Externalurl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("externalurl");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<bool>("Isaddonhomepage")
                        .HasColumnType("bit")
                        .HasColumnName("isaddonhomepage");

                    b.Property<DateTime?>("LastDateOfRegistration")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("LastTimeOfRegistration")
                        .HasColumnType("time");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEODescription");

                    b.Property<string>("SeoKeyword")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEOKeyword");

                    b.Property<string>("SeoPageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOPageName");

                    b.Property<string>("SeoTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOTitle");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Summary");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int")
                        .HasColumnName("TotalSeats");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("AMMasterProject.EventCategory", b =>
                {
                    b.Property<int>("EventCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventCategoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventCategoryId"));

                    b.Property<string>("EventCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EventCategoryName");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.HasKey("EventCategoryId");

                    b.ToTable("EventCategory");
                });

            modelBuilder.Entity("AMMasterProject.FAQ", b =>
                {
                    b.Property<int>("FAQId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FAQId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FAQId"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Answer");

                    b.Property<DateTime?>("Insertdate")
                        .HasColumnType("date");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Question");

                    b.Property<int>("Sortorder")
                        .HasColumnType("int")
                        .HasColumnName("sortorder");

                    b.HasKey("FAQId");

                    b.ToTable("WebsiteSetup_FAQ");
                });

            modelBuilder.Entity("AMMasterProject.GeneralSetup", b =>
                {
                    b.Property<int>("GeneralSetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneralSetupId"));

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("GeneralSetupIcon")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("GeneralSetupImage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("GeneralSetupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GeneralSetupType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Insertdate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("GeneralSetupId");

                    b.ToTable("General_Setup");
                });

            modelBuilder.Entity("AMMasterProject.LicenseSetup", b =>
                {
                    b.Property<int>("LicenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LicenseId"));

                    b.Property<string>("DomainName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseKeyByAdmin")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LicenseKeyByUser")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("SaleDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("SellingPlatform")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("LicenseId");

                    b.ToTable("License_Setup");
                });

            modelBuilder.Entity("AMMasterProject.Message", b =>
                {
                    b.Property<int>("MesageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MesageId"));

                    b.Property<string>("Attachment")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ChatID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("FileName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Message1")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("Message");

                    b.Property<int>("Receiverid")
                        .HasColumnType("int")
                        .HasColumnName("receiverid");

                    b.Property<DateTime?>("Recieveddate")
                        .HasColumnType("datetime")
                        .HasColumnName("recieveddate");

                    b.Property<string>("Sample")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sample");

                    b.Property<DateTime?>("Senddate")
                        .HasColumnType("datetime")
                        .HasColumnName("senddate");

                    b.Property<int>("Senderid")
                        .HasColumnType("int")
                        .HasColumnName("senderid");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.HasKey("MesageId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("AMMasterProject.Models.MessageMaster", b =>
                {
                    b.Property<int>("MesageMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MesageMasterId"));

                    b.Property<Guid>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("receiverid")
                        .HasColumnType("int");

                    b.Property<int>("senderid")
                        .HasColumnType("int");

                    b.HasKey("MesageMasterId");

                    b.ToTable("MessageMaser");
                });

            modelBuilder.Entity("AMMasterProject.Models.NotificationContent", b =>
                {
                    b.Property<int>("NotificationContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificationContentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationContentId"));

                    b.Property<string>("NotificationBody")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NotificationBody");

                    b.Property<int>("NotificationChannel")
                        .HasColumnType("int")
                        .HasColumnName("NotificationChannel");

                    b.Property<string>("NotificationSubject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NotificationSubject");

                    b.Property<string>("NotificationType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NotificationType");

                    b.HasKey("NotificationContentId");

                    b.ToTable("NotificationContent");
                });

            modelBuilder.Entity("AMMasterProject.Models.NotificationRelay", b =>
                {
                    b.Property<int>("NotificationRelayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificationContentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationRelayId"));

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeliveryDate");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit")
                        .HasColumnName("IsRead");

                    b.Property<bool>("Issent")
                        .HasColumnType("bit")
                        .HasColumnName("Issent");

                    b.Property<int>("NotificationChannel")
                        .HasColumnType("int")
                        .HasColumnName("NotificationChannel");

                    b.Property<string>("NotificationRelayBody")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("NotificationRelayBody");

                    b.Property<string>("NotificationRelaySubject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NotificationRelaySubject");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Receiver");

                    b.Property<string>("RedirectUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("RedirectUrl");

                    b.HasKey("NotificationRelayId");

                    b.ToTable("NotificationRelays");
                });

            modelBuilder.Entity("AMMasterProject.Models.RevenueCreditPackage", b =>
                {
                    b.Property<int>("RevenueCreditID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RevenueCreditID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevenueCreditID"));

                    b.Property<decimal>("CreditAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CreditImage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("CurrencyID")
                        .HasColumnType("int")
                        .HasColumnName("CurrencyId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsExpiry")
                        .HasColumnType("bit")
                        .HasColumnName("IsExpiry");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublish");

                    b.Property<bool>("IsRecommended")
                        .HasColumnType("bit")
                        .HasColumnName("IsRecommended");

                    b.Property<int>("NoofCredit")
                        .HasColumnType("int")
                        .HasColumnName("NoofCredit");

                    b.Property<int?>("NoofExpiryDays")
                        .HasColumnType("int")
                        .HasColumnName("NoofExpiryDays");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.Property<string>("RevenueCreditName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("RevenueCreditName");

                    b.Property<int>("Sortnumber")
                        .HasColumnType("int")
                        .HasColumnName("Sortnumber");

                    b.HasKey("RevenueCreditID");

                    b.ToTable("RevenueCreditPackage");
                });

            modelBuilder.Entity("AMMasterProject.Models.RevenueSubscriptionPackage", b =>
                {
                    b.Property<int>("RevenueSubscriptionPackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RevenueSubscriptionPackageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevenueSubscriptionPackageID"));

                    b.Property<decimal>("CreditAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("CreditAmount");

                    b.Property<int>("CurrencyID")
                        .HasColumnType("int")
                        .HasColumnName("CurrencyId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublish");

                    b.Property<bool>("IsRecommended")
                        .HasColumnType("bit")
                        .HasColumnName("IsRecommended");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.Property<int>("RecurringPeriodInDays")
                        .HasColumnType("int")
                        .HasColumnName("RecurringPeriodInDays");

                    b.Property<string>("RevenuePackageName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("RevenuePackageName");

                    b.Property<int>("Sortnumber")
                        .HasColumnType("int")
                        .HasColumnName("Sortnumber");

                    b.Property<string>("SubscriptionImage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("RevenueSubscriptionPackageID");

                    b.ToTable("RevenueSubscriptionPackage");
                });

            modelBuilder.Entity("AMMasterProject.NewsLetter", b =>
                {
                    b.Property<int>("NewsletterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NewsletterID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsletterId"));

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.HasKey("NewsletterId");

                    b.ToTable("NewsLetter");
                });

            modelBuilder.Entity("AMMasterProject.OrderMaster", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("AdminNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("AdminNotes");

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<string>("CouponMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CouponMetaData");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("InvoiceNumber");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsExpiry")
                        .HasColumnType("bit");

                    b.Property<string>("ItemMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ItemMetaData");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ItemType");

                    b.Property<string>("OrderChargesMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OrderChargesMetaData");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("OrderDate");

                    b.Property<string>("OrderProcessStatus")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("OrderProcessStatus");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("OrderStatus");

                    b.Property<string>("OrderStatusMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OrderStatusMetaData");

                    b.Property<string>("PaymentMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PaymentMetaData");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PaymentStatus");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TransactionType");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate");

                    b.Property<string>("VariationMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VariationMetaData");

                    b.Property<string>("VendorNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("VendorNotes");

                    b.HasKey("OrderId");

                    b.ToTable("OrderMasters");
                });

            modelBuilder.Entity("AMMasterProject.PageCategory", b =>
                {
                    b.Property<int>("PageCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PageCategoryId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Category");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublish");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.HasKey("PageCategoryId");

                    b.ToTable("PageCategory");
                });

            modelBuilder.Entity("AMMasterProject.PageDetail", b =>
                {
                    b.Property<int>("PageDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PageDetailId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PageDetailId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublish");

                    b.Property<string>("PageDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PageDescription");

                    b.Property<string>("PageJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PageJson");

                    b.Property<int>("PageNameId")
                        .HasColumnType("int")
                        .HasColumnName("PageNameId");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.HasKey("PageDetailId")
                        .HasName("PK_PageDetail");

                    b.ToTable("PageDetails");
                });

            modelBuilder.Entity("AMMasterProject.PageName", b =>
                {
                    b.Property<int>("PageNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PageNameId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PageNameId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublish");

                    b.Property<bool>("IsUrl")
                        .HasColumnType("bit")
                        .HasColumnName("IsURL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PageName");

                    b.Property<int>("PageCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("PageCategoryId");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.Property<string>("SeoDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEODescription");

                    b.Property<string>("SeoKeyword")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEOKeyword");

                    b.Property<string>("SeoPageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOPageName");

                    b.Property<string>("SeoTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOTitle");

                    b.Property<int>("Sortnumber")
                        .HasColumnType("int")
                        .HasColumnName("Sortnumber");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Type");

                    b.Property<string>("Url")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("URL");

                    b.HasKey("PageNameId");

                    b.ToTable("PageName");
                });

            modelBuilder.Entity("AMMasterProject.ProductAmenitiesOptionsV2", b =>
                {
                    b.Property<int>("ProductAmenitiesOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductAmenitiesOptionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductAmenitiesOptionId"));

                    b.Property<bool?>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<string>("ProductAmenitiesIcon")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ProductAmenitiesId")
                        .HasColumnType("int");

                    b.Property<string>("ProductAmenitiesName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("ProductAmenitiesOptionId")
                        .HasName("PK_Product_Amenities_Options");

                    b.ToTable("Product_Amenities_Options_V2");
                });

            modelBuilder.Entity("AMMasterProject.ProductAmenitiesQuestionV2", b =>
                {
                    b.Property<int>("ProductAmenitiesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductAmenitiesId"));

                    b.Property<string>("ControlType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<string>("ProductAmenitiesHeading")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("SortNumber")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductAmenitiesId")
                        .HasName("PK_Product_Amenities_V2");

                    b.ToTable("Product_AmenitiesQuestion_V2");
                });

            modelBuilder.Entity("AMMasterProject.ProductAmenitiesViewV2", b =>
                {
                    b.Property<int>("ProductAmenitiesViewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductAmenitiesViewID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductAmenitiesViewId"));

                    b.Property<int?>("ProductAmenitiesId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductAmenitiesOptionId")
                        .HasColumnType("int")
                        .HasColumnName("ProductAmenitiesOptionID");

                    b.Property<Guid?>("ProductGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductGUID");

                    b.HasKey("ProductAmenitiesViewId");

                    b.ToTable("Product_Amenities_View_V2");
                });

            modelBuilder.Entity("AMMasterProject.ProductAttributeOptionV2", b =>
                {
                    b.Property<int>("ProductAttributeOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductAttributeOptionId"));

                    b.Property<string>("Attributeimage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("attributeimage");

                    b.Property<decimal>("Attributeprice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("attributeprice");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("ProductAttributeGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductAttributeGUID");

                    b.HasKey("ProductAttributeOptionId");

                    b.ToTable("Product_AttributeOption_V2");
                });

            modelBuilder.Entity("AMMasterProject.ProductAttributeQuestionV2", b =>
                {
                    b.Property<int>("ProductAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductAttributeId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProductAttributeGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductAttributeGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("ProductGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductGUID");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ProductAttributeId")
                        .HasName("PK_ProductAttribute_Master");

                    b.ToTable("Product_AttributeQuestion_V2");
                });

            modelBuilder.Entity("AMMasterProject.ProductBasicV2", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("AuctionEndDateTime")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("AuctionReservedPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("AuctionStartDateTime")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("AuctionStartPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("BrandName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cancelpolicy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cancelpolicy");

                    b.Property<string>("CategoryArray")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("DetailDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DigitalFile")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Eancode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EANCode");

                    b.Property<int?>("GeneralSetupId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsAdminApproved")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCustomProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsProductVideo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<bool>("Isfreeshipping")
                        .HasColumnType("bit")
                        .HasColumnName("isfreeshipping");

                    b.Property<bool>("Ismanageinventory")
                        .HasColumnType("bit")
                        .HasColumnName("ismanageinventory");

                    b.Property<bool>("Isoutofstock")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Maxcartqty")
                        .HasColumnType("int")
                        .HasColumnName("maxcartqty");

                    b.Property<int?>("Mincartqty")
                        .HasColumnType("int")
                        .HasColumnName("mincartqty");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("OldPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("ProductGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ProductImage")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nchar(1000)")
                        .IsFixedLength();

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductSellingId")
                        .HasColumnType("int");

                    b.Property<string>("ProductSeourl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ProductSEOURL");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ProductVideoUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ProductVideoURL");

                    b.Property<string>("Producttags")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("producttags");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Returnpolicy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("returnpolicy");

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("SEO_Keywords");

                    b.Property<string>("SeoMetaTitle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEO_MetaTItle");

                    b.Property<string>("SeoMetadescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SEO_Metadescription");

                    b.Property<string>("SeoPageName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEO_PageName");

                    b.Property<decimal?>("ShippingAddonCharge")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("shipping_AddonCharge");

                    b.Property<decimal?>("ShippingHeight")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("shipping_height");

                    b.Property<decimal?>("ShippingLength")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("shipping_length");

                    b.Property<decimal?>("ShippingWeight")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("shipping_weight");

                    b.Property<decimal?>("ShippingWidth")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("shipping_width");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Sku")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SKU");

                    b.Property<int>("StarRating")
                        .HasColumnType("int");

                    b.Property<int>("TotalReviews")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("GeneralSetupId");

                    b.ToTable("Product_Basic_V2");
                });

            modelBuilder.Entity("AMMasterProject.ProductBoost", b =>
                {
                    b.Property<int>("ProductBoostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductBoostId"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Fees")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProductGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductGUID");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("ProductBoostId");

                    b.ToTable("Product_Boost");
                });

            modelBuilder.Entity("AMMasterProject.ProductBrand", b =>
                {
                    b.Property<int>("ProductBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductBrandId"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ProductGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductGUID");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("ProductBrandId")
                        .HasName("PK_Product_Brand");

                    b.ToTable("Product_Brands");
                });

            modelBuilder.Entity("AMMasterProject.ProductComparisionV2", b =>
                {
                    b.Property<int>("ProductComparisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductComparisionId"));

                    b.Property<string>("InsertBy")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IP");

                    b.Property<Guid?>("ProductComparisionGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductComparisionGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductComparisionId");

                    b.ToTable("Product_Comparision_V2");
                });

            modelBuilder.Entity("AMMasterProject.ProductCoupon", b =>
                {
                    b.Property<int>("ProductCouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductCouponId"));

                    b.Property<decimal>("AdminPercentage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CouponDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CouponDescription");

                    b.Property<string>("CouponName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CouponName");

                    b.Property<int>("CouponTypeId")
                        .HasColumnType("int")
                        .HasColumnName("CouponTypeId");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("DiscountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DiscountType");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<int>("NoofCoupon")
                        .HasColumnType("int")
                        .HasColumnName("NoofCoupon");

                    b.Property<int>("PerPersonUsed")
                        .HasColumnType("int")
                        .HasColumnName("PerPersonUsed");

                    b.Property<Guid>("ProductCouponGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductCouponGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<decimal>("SellerPercentage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("ProductCouponId");

                    b.ToTable("Product_Coupon");
                });

            modelBuilder.Entity("AMMasterProject.ProductCouponChild", b =>
                {
                    b.Property<int>("ProductCouponChildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductCouponChildId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ProductCouponChildGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductCouponChildGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("ProductCouponId")
                        .HasColumnType("int")
                        .HasColumnName("ProductCouponId");

                    b.Property<int>("ReferenceId")
                        .HasColumnType("int")
                        .HasColumnName("ReferenceId");

                    b.Property<int>("ReferenceTypeID")
                        .HasColumnType("int")
                        .HasColumnName("ReferenceTypeID");

                    b.HasKey("ProductCouponChildId");

                    b.ToTable("Product_Coupon_Child");
                });

            modelBuilder.Entity("AMMasterProject.ProductDiscount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<DateTime?>("DiscountEndDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("DiscountOffer")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("DiscountStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DiscountType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ModuleID");

                    b.Property<string>("ModuleType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DiscountId");

                    b.ToTable("Product_Discount");
                });

            modelBuilder.Entity("AMMasterProject.ProductImage", b =>
                {
                    b.Property<int>("ProductImagesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductImagesId"));

                    b.Property<string>("AltText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("Displayorder")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ProductGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductGUID");

                    b.Property<string>("Title")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("ProductImagesId");

                    b.ToTable("Product_Images");
                });

            modelBuilder.Entity("AMMasterProject.ProductInventory", b =>
                {
                    b.Property<int>("ProductInventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductInventoryId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Inventory")
                        .HasColumnType("int");

                    b.Property<int?>("Modifiedby")
                        .HasColumnType("int")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifieddate");

                    b.Property<Guid?>("ProductGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductGUID");

                    b.Property<int?>("Profileid")
                        .HasColumnType("int")
                        .HasColumnName("profileid");

                    b.Property<decimal?>("PurchaseCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("Purchasedate")
                        .HasColumnType("datetime")
                        .HasColumnName("purchasedate");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("Vendor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vendor");

                    b.HasKey("ProductInventoryId");

                    b.ToTable("Product_Inventory");
                });

            modelBuilder.Entity("AMMasterProject.ProductJobPost", b =>
                {
                    b.Property<int>("ProductJobPostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductJobPostID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductJobPostId"));

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsBudget")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsJobAllocated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PriceEnd")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("PriceStart")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductImage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("ProductJobPostGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductJobPostGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ProductTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("ProductJobPostId");

                    b.ToTable("Product_Job_Post");
                });

            modelBuilder.Entity("AMMasterProject.ProductJobPostApply", b =>
                {
                    b.Property<int>("ProductJobAppliedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductJobAppliedID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductJobAppliedId"));

                    b.Property<string>("AdminNotes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("AssignedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AssignedNotes")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CancelledDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CancelledReason")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsJobAssigned")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("JobApplication")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("PriceBid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("ProductJobAppliedGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductJobAppliedGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("ProductJobPostGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductJobPostGUID");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.HasKey("ProductJobAppliedId");

                    b.ToTable("Product_Job_Post_Apply");
                });

            modelBuilder.Entity("AMMasterProject.ProductQuestion", b =>
                {
                    b.Property<int>("ProductQaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductQAId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductQaid"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("ProductQaid")
                        .HasName("PK_Product_Question_Answer");

                    b.ToTable("Product_Question");
                });

            modelBuilder.Entity("AMMasterProject.ProductQuestionAnswer", b =>
                {
                    b.Property<int>("ProductAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductAnswerId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductQaid")
                        .HasColumnType("int")
                        .HasColumnName("ProductQAId");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Qanswer")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("QAnswer");

                    b.HasKey("ProductAnswerId")
                        .HasName("PK_Product_Question_Answer_1");

                    b.ToTable("Product_Question_Answer");
                });

            modelBuilder.Entity("AMMasterProject.ProductRecentlyViewed", b =>
                {
                    b.Property<int>("RecentlyViewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecentlyViewId"));

                    b.Property<DateTime?>("Insertdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Ip")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("IP");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("RecentlyViewId");

                    b.ToTable("Product_Recently_Viewed");
                });

            modelBuilder.Entity("AMMasterProject.ProductRelatedProduct", b =>
                {
                    b.Property<int>("ProductRelatedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductRelatedId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ProductGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductGUID");

                    b.Property<int?>("RelatedProductId")
                        .HasColumnType("int")
                        .HasColumnName("RelatedProductID");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.HasKey("ProductRelatedId");

                    b.ToTable("Product_RelatedProducts");
                });

            modelBuilder.Entity("AMMasterProject.ProductReviewV2", b =>
                {
                    b.Property<int>("ReviewProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewProductId"));

                    b.Property<string>("Attachment")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("StartRating")
                        .HasColumnType("int");

                    b.HasKey("ReviewProductId");

                    b.ToTable("Product_Review_V2");
                });

            modelBuilder.Entity("AMMasterProject.ProductTag", b =>
                {
                    b.Property<int>("ProductTagsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductTagsId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ProductGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductGUID");

                    b.Property<string>("ProductTags")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("ProductTagsId");

                    b.ToTable("Product_Tags");
                });

            modelBuilder.Entity("AMMasterProject.ProductTaxV2", b =>
                {
                    b.Property<int>("ProductTaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductTaxId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ProductGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductGUID");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("TaxClassId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ProductTaxId");

                    b.ToTable("Product_Tax_V2");
                });

            modelBuilder.Entity("AMMasterProject.ProductTypeSetup", b =>
                {
                    b.Property<int>("ProductTypeSetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductTypeSetupId"));

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Module")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductTypeSetupId");

                    b.ToTable("Product_Type_Setup");
                });

            modelBuilder.Entity("AMMasterProject.ProductVoucher", b =>
                {
                    b.Property<int>("VoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoucherID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoucherId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VoucherCode")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("VoucherId");

                    b.ToTable("Product_Voucher");
                });

            modelBuilder.Entity("AMMasterProject.SetupAw", b =>
                {
                    b.Property<int>("Awsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AWSID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Awsid"));

                    b.Property<string>("AccessKey")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BucketName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SecretyKey")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServerPoint")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Urlpath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("URLPath");

                    b.HasKey("Awsid");

                    b.ToTable("Setup_AWS");
                });

            modelBuilder.Entity("AMMasterProject.SetupTaxClass", b =>
                {
                    b.Property<int>("TaxClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TaxClassID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaxClassId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsAdminApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("TaxClass")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("TaxClassGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TaxClassGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TaxClassId");

                    b.ToTable("Setup_TaxClass");
                });

            modelBuilder.Entity("AMMasterProject.SpecificationSetup", b =>
                {
                    b.Property<int>("SpecificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecificationId"));

                    b.Property<int?>("AttributeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SpecificationName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SpecificiatoinDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("SpecificationId");

                    b.ToTable("Specification_Setup");
                });

            modelBuilder.Entity("AMMasterProject.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Loginchannel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("loginchannel");

                    b.Property<string>("Logintype")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("logintype");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Registertype")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("registertype");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AMMasterProject.UserActivation", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<Guid>("ActivationCode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.ToTable("UserActivation");
                });

            modelBuilder.Entity("AMMasterProject.UserNotification", b =>
                {
                    b.Property<int>("UserNotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserNotificationId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isemailsent")
                        .HasColumnType("bit")
                        .HasColumnName("isemailsent");

                    b.Property<bool?>("Ismobilenotificationsent")
                        .HasColumnType("bit")
                        .HasColumnName("ismobilenotificationsent");

                    b.Property<string>("MessageBody")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Module")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverID");

                    b.Property<string>("RedirectPage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ReferenceId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("SenderID");

                    b.HasKey("UserNotificationId");

                    b.ToTable("User_Notification");
                });

            modelBuilder.Entity("AMMasterProject.UsersLoyaltyPoint", b =>
                {
                    b.Property<int>("UserLoyaltyPointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserLoyaltyPointID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserLoyaltyPointId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LoyaltyAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("LoyaltyPercentage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Message")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("OrderMasterCustomGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderMasterCustomGUID");

                    b.HasKey("UserLoyaltyPointId");

                    b.ToTable("Users_LoyaltyPoint");
                });

            modelBuilder.Entity("AMMasterProject.UsersProfile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileId"));

                    b.Property<string>("About")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("About");

                    b.Property<string>("Address")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Address");

                    b.Property<string>("AdminRemarksOnLocked")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("AdminRemarksOnLocked");

                    b.Property<string>("AdminStatusMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AdminStatusMetaData");

                    b.Property<string>("AnnouncementMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AnnouncementMetaData");

                    b.Property<int?>("Averagerating")
                        .HasColumnType("int")
                        .HasColumnName("Averagerating");

                    b.Property<string>("BusinessDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("BusinessDescription");

                    b.Property<string>("BusinessMetaData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("BusinessMetaData");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BusinessName");

                    b.Property<int?>("BusinessType")
                        .HasColumnType("int")
                        .HasColumnName("BusinessType");

                    b.Property<string>("BusinessUrlpath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BusinessURLPath");

                    b.Property<string>("CertificateProofMetaData")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("CertificateProofMetaData");

                    b.Property<string>("ClientDisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ClientDisplayName");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactNumber");

                    b.Property<string>("Email")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Email");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Firstname");

                    b.Property<int?>("Followers")
                        .HasColumnType("int")
                        .HasColumnName("Followers");

                    b.Property<string>("IdentityProofMetaData")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("IdentityProofMetaData");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Datetime");

                    b.Property<bool?>("IsLockedByAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("IsLockedByAdmin");

                    b.Property<bool?>("IsUserNameVerified")
                        .HasColumnType("bit")
                        .HasColumnName("IsUserNameVerified");

                    b.Property<DateTime?>("Lastlogin")
                        .HasColumnType("datetime2")
                        .HasColumnName("Lastlogin");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Lastname");

                    b.Property<string>("Loginchannel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Loginchannel");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Password");

                    b.Property<string>("PrimaryAddressMetaData")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PrimaryAddressMetaData");

                    b.Property<Guid>("ProfileGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProfileGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ProfileImage");

                    b.Property<string>("ProfileVerificationMetaData")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("ProfileVerificationMetaData");

                    b.Property<string>("SecondaryAddressMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SecondaryAddressMetaData");

                    b.Property<string>("SecondaryContactMetaData")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("SecondaryContactMetaData");

                    b.Property<string>("SellerCoverImage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("SellerCoverImage");

                    b.Property<string>("SellerDisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SellerDisplayName");

                    b.Property<string>("SellerImage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("SellerImage");

                    b.Property<string>("SellerPayAccountMetaData")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)")
                        .HasColumnName("SellerPayAccountMetaData");

                    b.Property<string>("SellerVideoURl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("SellerVideoURL");

                    b.Property<string>("SocialMediaMetaData")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("SocialMediaMetaData");

                    b.Property<string>("TeamMembersMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TeamMembersMetaData");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("UserType");

                    b.Property<DateTime?>("UnLockedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UnLockedDate");

                    b.Property<string>("UserName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("UserName");

                    b.HasKey("ProfileId");

                    b.ToTable("Users_Profile");
                });

            modelBuilder.Entity("AMMasterProject.VendorFollow", b =>
                {
                    b.Property<int>("FollowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FollowerId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("FollowerId");

                    b.ToTable("Vendor_Follow");
                });

            modelBuilder.Entity("AMMasterProject.VendorMembershipPackage", b =>
                {
                    b.Property<int>("Membershipid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Membershipid"));

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Fees")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Membershiptype")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RecurringPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("Sortoption")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Membershipid")
                        .HasName("PK_Vendor_Membership");

                    b.ToTable("Vendor_Membership_Package");
                });

            modelBuilder.Entity("AMMasterProject.VendorWareHouse", b =>
                {
                    b.Property<int>("VendorWareHouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorWareHouseId"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CityPerKm")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("CityPerKM");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CountryPerKm")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("CountryPerKM");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("OutCountryPerKm")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("OutCountryPerKM");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("WareHoueName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WareHouseContact")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("VendorWareHouseId");

                    b.ToTable("Vendor_WareHouse");
                });

            modelBuilder.Entity("AMMasterProject.Websetting", b =>
                {
                    b.Property<int>("WebsettingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WebsettingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebsettingID"));

                    b.Property<string>("WebsettingKey")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("WebsettingKey");

                    b.Property<string>("WebsettingValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WebsettingValue");

                    b.HasKey("WebsettingID");

                    b.ToTable("Websetting");
                });

            modelBuilder.Entity("AMMasterProject.WebsiteSetup", b =>
                {
                    b.Property<int>("WebsiteSetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebsiteSetupId"));

                    b.Property<string>("DeductionType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ItemKey")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ItemValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("WebsiteSetupId");

                    b.ToTable("Website_Setup");
                });

            modelBuilder.Entity("AMMasterProject.WebsiteSetupCm", b =>
                {
                    b.Property<int>("Cmsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CMSId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cmsid"));

                    b.Property<string>("Cmscontent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CMSContent");

                    b.Property<string>("Cmskey")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CMSKey");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.HasKey("Cmsid");

                    b.ToTable("Website_Setup_CMS");
                });

            modelBuilder.Entity("AMMasterProject.WebsiteSetupHoliday", b =>
                {
                    b.Property<int>("HolidayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HolidayId"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Daterange")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("daterange");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("HolidayDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Ispriorrelease")
                        .HasColumnType("bit");

                    b.Property<int?>("Profileid")
                        .HasColumnType("int")
                        .HasColumnName("profileid");

                    b.Property<DateTime?>("Todate")
                        .HasColumnType("datetime")
                        .HasColumnName("todate");

                    b.HasKey("HolidayId");

                    b.ToTable("Website_Setup_Holiday");
                });

            modelBuilder.Entity("AMMasterProject.WebsiteSetupLoyaltyPoint", b =>
                {
                    b.Property<int>("LoyaltyPointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoyaltyPointId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDiscountedItemAllowed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPurchasedThreshold")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LoyaltyPointGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LoyaltyPointGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("PurchaseThresholdAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("LoyaltyPointId");

                    b.ToTable("Website_Setup_LoyaltyPoint");
                });

            modelBuilder.Entity("AMMasterProject.WebsiteSetupProductDetail", b =>
                {
                    b.Property<int>("WebsiteSetupProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebsiteSetupProductId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("SetupProductId")
                        .HasColumnType("int")
                        .HasColumnName("SetupProductID");

                    b.Property<int?>("WebsiteSetupPageId")
                        .HasColumnType("int");

                    b.HasKey("WebsiteSetupProductId");

                    b.ToTable("Website_Setup_Product_Detail");
                });

            modelBuilder.Entity("AMMasterProject.WebsiteSetupProductSetting", b =>
                {
                    b.Property<int>("WebsiteSetupPageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WebsiteSetupPageId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebsiteSetupPageId"));

                    b.Property<string>("Backgroundcolor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Backgroundcolor");

                    b.Property<string>("Banner")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsEditable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<string>("PageName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductBoxCount")
                        .HasColumnType("int")
                        .HasColumnName("ProductBoxCount");

                    b.Property<int>("ProductViewQty")
                        .HasColumnType("int")
                        .HasColumnName("ProductViewQty");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.Property<int>("SellingTypeId")
                        .HasColumnType("int")
                        .HasColumnName("SellingTypeId");

                    b.Property<bool>("ShowBanner")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowItemAsSlider")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowTitle")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("SortOrder");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Title");

                    b.Property<int>("WebsiteItemSetupId")
                        .HasColumnType("int")
                        .HasColumnName("WebsiteItemSetupId");

                    b.Property<int?>("WebsiteSetupPageKey")
                        .HasColumnType("int")
                        .HasColumnName("WebsiteSetupPage_Key");

                    b.HasKey("WebsiteSetupPageId");

                    b.ToTable("Website_Setup_Product_Setting");
                });

            modelBuilder.Entity("AMMasterProject.WebsiteSetupScript", b =>
                {
                    b.Property<int>("Scriptid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Scriptid"));

                    b.Property<string>("Scriptname")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Scriptid");

                    b.ToTable("Website_Setup_Script");
                });

            modelBuilder.Entity("AMMasterProject.WebsiteSetupSocialMedia", b =>
                {
                    b.Property<int>("SocialMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SocialMediaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SocialMediaId"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Icon");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublish");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("URL");

                    b.HasKey("SocialMediaId");

                    b.ToTable("WebsiteSetupSocialMedia");
                });

            modelBuilder.Entity("AMMasterProject.WebsiteSetupThemeOption", b =>
                {
                    b.Property<int>("WebsiteSetupThemeOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WebsiteSetupThemeOptionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebsiteSetupThemeOptionId"));

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ThemeSetupOption")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("WebsiteThemeSelectionId")
                        .HasColumnType("int");

                    b.HasKey("WebsiteSetupThemeOptionId");

                    b.ToTable("Website_Setup_Theme_Option");
                });

            modelBuilder.Entity("AMMasterProject.WebsiteSetupThemeSelection", b =>
                {
                    b.Property<int>("WebsiteThemeSelectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebsiteThemeSelectionId"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ThemeCss")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ThemeCSS");

                    b.Property<string>("ThemeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("WebsiteThemeSelectionId");

                    b.ToTable("Website_Setup_ThemeSelection");
                });

            modelBuilder.Entity("AMMasterProject.WebsitesetupLibrary", b =>
                {
                    b.Property<int>("WebsitesetupLibraryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebsitesetupLibraryId"));

                    b.Property<string>("AltTag")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImageLink")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Imagekey")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("imagekey");

                    b.HasKey("WebsitesetupLibraryId");

                    b.ToTable("Websitesetup_Library");
                });

            modelBuilder.Entity("AMMasterProject.WebsitesetupPartner", b =>
                {
                    b.Property<int>("PartnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PartnerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartnerId"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Image");

                    b.Property<DateTime?>("Insertdate")
                        .HasColumnType("date");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<bool>("Isaddonhomepage")
                        .HasColumnType("bit")
                        .HasColumnName("showonhomepage");

                    b.Property<string>("ParnerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ParnertName");

                    b.Property<Guid>("PartnerGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PartnerGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Partnerurl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("partnerurl");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<int>("Sortorder")
                        .HasColumnType("int")
                        .HasColumnName("sortorder");

                    b.HasKey("PartnerId");

                    b.ToTable("Websitesetup_Partner");
                });

            modelBuilder.Entity("AMMasterProject.WebsitesetupTeam", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TeamID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Designation");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Image");

                    b.Property<DateTime?>("Insertdate")
                        .HasColumnType("date");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<int>("Sortorder")
                        .HasColumnType("int")
                        .HasColumnName("sortorder");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Summary");

                    b.HasKey("TeamId");

                    b.ToTable("Websitesetup_Team");
                });

            modelBuilder.Entity("AMMasterProject.ProductBasicV2", b =>
                {
                    b.HasOne("AMMasterProject.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AMMasterProject.GeneralSetup", null)
                        .WithMany("ProductBasicV2s")
                        .HasForeignKey("GeneralSetupId");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("AMMasterProject.GeneralSetup", b =>
                {
                    b.Navigation("ProductBasicV2s");
                });
#pragma warning restore 612, 618
        }
    }
}
