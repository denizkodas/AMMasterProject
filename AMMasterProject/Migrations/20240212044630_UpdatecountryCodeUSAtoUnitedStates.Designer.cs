// <auto-generated />
using System;
using AMMasterProject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AMMasterProject.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240212044630_UpdatecountryCodeUSAtoUnitedStates")]
    partial class UpdatecountryCodeUSAtoUnitedStates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AMMasterProject.Advert", b =>
                {
                    b.Property<int>("AdvertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdvertId"));

                    b.Property<int>("AdsPageId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<bool>("IsUrl")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("AdvertId");

                    b.ToTable("Advert");
                });

            modelBuilder.Entity("AMMasterProject.Alphabet", b =>
                {
                    b.Property<string>("Alphabet1")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Alphabet");

                    b.Property<int>("Alphabetid")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("Alphabet");
                });

            modelBuilder.Entity("AMMasterProject.AnnouncementNotification", b =>
                {
                    b.Property<int>("AnnouncementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AnnouncementId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnnouncementId"));

                    b.Property<string>("AnnouncementFor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AnnouncementFor");

                    b.Property<Guid>("AnnouncementGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnnouncementGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpiryDate");

                    b.Property<string>("ImageURL")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ImageURL");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublish");

                    b.Property<int?>("ProfileID")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("RedirectURL")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("RedirectURL");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Title");

                    b.HasKey("AnnouncementId");

                    b.ToTable("AnnouncementNotification");
                });

            modelBuilder.Entity("AMMasterProject.BlogCategory", b =>
                {
                    b.Property<int>("BlogCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BlogCategoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogCategoryId"));

                    b.Property<string>("BlogCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BlogCategoryName");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.HasKey("BlogCategoryId");

                    b.ToTable("BlogCategory");
                });

            modelBuilder.Entity("AMMasterProject.Blogging", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<int>("Categoryid")
                        .HasColumnType("int")
                        .HasColumnName("categoryid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Externalurl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("externalurl");

                    b.Property<string>("Fileattached")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Fileattached");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Image");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<bool>("Isaddonhomepage")
                        .HasColumnType("bit")
                        .HasColumnName("isaddonhomepage");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEODescription");

                    b.Property<string>("SeoKeyword")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEOKeyword");

                    b.Property<string>("SeoPageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOPageName");

                    b.Property<string>("SeoTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEOTitle");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Summary");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("isfeatured")
                        .HasColumnType("bit")
                        .HasColumnName("isfeatured");

                    b.HasKey("BlogId");

                    b.ToTable("Bloging");
                });

            modelBuilder.Entity("AMMasterProject.Career", b =>
                {
                    b.Property<int>("CareerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CareerId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CareerId"));

                    b.Property<Guid>("CareerGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CareerGuid");

                    b.Property<int>("Categoryid")
                        .HasColumnType("int")
                        .HasColumnName("categoryid");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Externalurl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("externalurl");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<bool>("Isaddonhomepage")
                        .HasColumnType("bit")
                        .HasColumnName("isaddonhomepage");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEODescription");

                    b.Property<string>("SeoKeyword")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEOKeyword");

                    b.Property<string>("SeoPageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOPageName");

                    b.Property<string>("SeoTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOTitle");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Summary");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CareerId");

                    b.ToTable("Careers");
                });

            modelBuilder.Entity("AMMasterProject.CareerApplication", b =>
                {
                    b.Property<int>("CareerApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CareerApplicationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CareerApplicationId"));

                    b.Property<int?>("ApplicationStatus")
                        .HasColumnType("int")
                        .HasColumnName("ApplicationStatusId");

                    b.Property<Guid>("CareerGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CareerGuid");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.HasKey("CareerApplicationId");

                    b.ToTable("CareerApplication");
                });

            modelBuilder.Entity("AMMasterProject.CareerCategory", b =>
                {
                    b.Property<int>("CareerCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CareerCategoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CareerCategoryId"));

                    b.Property<string>("CareerCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CareerCategoryName");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.HasKey("CareerCategoryId");

                    b.ToTable("CareerCategory");
                });

            modelBuilder.Entity("AMMasterProject.CategoryMaster", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Banner")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("category_name");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<string>("Icon")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsIncludeMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowHomePage")
                        .HasColumnType("bit");

                    b.Property<int>("ListingTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ParentCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("parent_category_id");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.Property<int>("SellingTypeID")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEODescription");

                    b.Property<string>("SeoKeyword")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEOKeyword");

                    b.Property<string>("SeoPageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOTitle");

                    b.Property<int>("Sortnumber")
                        .HasColumnType("int")
                        .HasColumnName("Sortnumber");

                    b.Property<string>("Urlpath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("URLPath");

                    b.HasKey("CategoryId");

                    b.ToTable("category_master");
                });

            modelBuilder.Entity("AMMasterProject.CountryCode", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CountryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryID"));

                    b.Property<decimal>("ConversionRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ConversionUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CountryCode2Digit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CountryCode2Digit");

                    b.Property<string>("CountryCode3Digit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CountryCode3Digit");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CurrencyCode");

                    b.Property<string>("CurrencyName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CurrencyName");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CurrencySymbol");

                    b.Property<string>("Flagpath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("FlagPath");

                    b.Property<bool>("IsCurrencyPublish")
                        .HasColumnType("bit")
                        .HasColumnName("IsCurrencyPublish");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublish");

                    b.Property<string>("MobileCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MobileCode");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name");

                    b.HasKey("CountryID");

                    b.ToTable("CountryCode");
                });

            modelBuilder.Entity("AMMasterProject.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyId"));

                    b.Property<string>("CurrencyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("AMMasterProject.CustomerAddress", b =>
                {
                    b.Property<int>("CustomerAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerAddressId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AddressType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("CustomerAddressGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerAddressGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HouseNumber")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Street")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Zipcode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CustomerAddressId");

                    b.ToTable("Customer_Address");
                });

            modelBuilder.Entity("AMMasterProject.CustomerWishlist", b =>
                {
                    b.Property<int>("WishlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WishlistId"));

                    b.Property<string>("Cwgroupname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("cwgroupname");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IP");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasMaxLength(256)
                        .HasColumnType("int");

                    b.HasKey("WishlistId");

                    b.ToTable("Customer_Wishlist");
                });

            modelBuilder.Entity("AMMasterProject.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Categoryid")
                        .HasColumnType("int")
                        .HasColumnName("categoryid");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("EventEndDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("EventEndTime")
                        .HasColumnType("time");

                    b.Property<string>("EventImage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("EventImage");

                    b.Property<DateTime?>("EventStartDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("EventStartTime")
                        .HasColumnType("time");

                    b.Property<string>("Externalurl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("externalurl");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<bool>("Isaddonhomepage")
                        .HasColumnType("bit")
                        .HasColumnName("isaddonhomepage");

                    b.Property<DateTime?>("LastDateOfRegistration")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("LastTimeOfRegistration")
                        .HasColumnType("time");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEODescription");

                    b.Property<string>("SeoKeyword")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEOKeyword");

                    b.Property<string>("SeoPageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOPageName");

                    b.Property<string>("SeoTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOTitle");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Summary");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int")
                        .HasColumnName("TotalSeats");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("AMMasterProject.EventCategory", b =>
                {
                    b.Property<int>("EventCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventCategoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventCategoryId"));

                    b.Property<string>("EventCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EventCategoryName");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.HasKey("EventCategoryId");

                    b.ToTable("EventCategory");
                });

            modelBuilder.Entity("AMMasterProject.FAQ", b =>
                {
                    b.Property<int>("FAQId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FAQId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FAQId"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Answer");

                    b.Property<DateTime?>("Insertdate")
                        .HasColumnType("date");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Question");

                    b.Property<int>("Sortorder")
                        .HasColumnType("int")
                        .HasColumnName("sortorder");

                    b.HasKey("FAQId");

                    b.ToTable("WebsiteSetup_FAQ");
                });

            modelBuilder.Entity("AMMasterProject.ItemListing", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("AdminMetaData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmenitiesMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AmenitiesMetaData");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InventoryItemMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("InventoryItemMetaData");

                    b.Property<bool>("IsAdminLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDetailMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ItemDetailMetaData");

                    b.Property<string>("ItemDigitalMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ItemDigitalMetaData");

                    b.Property<Guid?>("ItemGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ItemGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ItemImagesMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ItemImagesMetaData");

                    b.Property<string>("ItemMetaData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ItemMetaData");

                    b.Property<string>("ItemOtherMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ItemOtherMetaData");

                    b.Property<string>("ItemPolicyMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ItemPolicyMetaData");

                    b.Property<string>("ItemShippingMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ItemShippingMetaData");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("RelatedItemMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RelatedItemMetaData");

                    b.Property<string>("SellerDiscountMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SellerDiscountMetaData");

                    b.Property<string>("VideoItemMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VideoItemMetaData");

                    b.HasKey("ItemId");

                    b.ToTable("ItemListings");
                });

            modelBuilder.Entity("AMMasterProject.ItemPageDesign", b =>
                {
                    b.Property<int>("ItemPageDesignID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemPageDesignID"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Ispublish")
                        .HasColumnType("bit");

                    b.Property<string>("PageDesignMetaData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PageDesignMetaData");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SelectionMetaData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("SelectionMetaData");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Title");

                    b.HasKey("ItemPageDesignID");

                    b.ToTable("ItemPageDesign");
                });

            modelBuilder.Entity("AMMasterProject.Message", b =>
                {
                    b.Property<int>("MesageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MesageId"));

                    b.Property<string>("Attachment")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ChatID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("FileName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Message1")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("Message");

                    b.Property<int>("Receiverid")
                        .HasColumnType("int")
                        .HasColumnName("receiverid");

                    b.Property<DateTime?>("Recieveddate")
                        .HasColumnType("datetime")
                        .HasColumnName("recieveddate");

                    b.Property<string>("Sample")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sample");

                    b.Property<DateTime?>("Senddate")
                        .HasColumnType("datetime")
                        .HasColumnName("senddate");

                    b.Property<int>("Senderid")
                        .HasColumnType("int")
                        .HasColumnName("senderid");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.HasKey("MesageId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("AMMasterProject.Models.FormDetail", b =>
                {
                    b.Property<int>("FormDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormDetailsID"));

                    b.Property<string>("ContentReply")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FormDetailsID");

                    b.ToTable("FormDetails");
                });

            modelBuilder.Entity("AMMasterProject.Models.ItemPageDesignChild", b =>
                {
                    b.Property<int>("ItemPageDesignChildID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemPageDesignChildID"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemPageDesignID")
                        .HasColumnType("int");

                    b.Property<string>("Selectiontype")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SelecttionID")
                        .HasColumnType("int");

                    b.HasKey("ItemPageDesignChildID");

                    b.ToTable("ItemPageDesignChild");
                });

            modelBuilder.Entity("AMMasterProject.Models.MenuItem", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MenuId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<string>("CssClass")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowHomePage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsURL")
                        .HasColumnType("bit");

                    b.Property<string>("MenuFor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MenuFor");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MenuName");

                    b.Property<int>("ParentCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("parent_category_id");

                    b.Property<int>("Sortnumber")
                        .HasColumnType("int")
                        .HasColumnName("Sortnumber");

                    b.Property<string>("Urlpath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("URLPath");

                    b.HasKey("MenuId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("AMMasterProject.Models.MessageMaster", b =>
                {
                    b.Property<int>("MesageMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MesageMasterId"));

                    b.Property<Guid>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("receiverid")
                        .HasColumnType("int");

                    b.Property<int>("senderid")
                        .HasColumnType("int");

                    b.HasKey("MesageMasterId");

                    b.ToTable("MessageMaser");
                });

            modelBuilder.Entity("AMMasterProject.Models.NotificationRelay", b =>
                {
                    b.Property<int>("NotificationRelayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificationContentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationRelayId"));

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeliveryDate");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit")
                        .HasColumnName("IsRead");

                    b.Property<bool>("Issent")
                        .HasColumnType("bit")
                        .HasColumnName("Issent");

                    b.Property<int>("NotificationChannel")
                        .HasColumnType("int")
                        .HasColumnName("NotificationChannel");

                    b.Property<string>("NotificationRelayBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NotificationRelayBody");

                    b.Property<string>("NotificationRelaySubject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NotificationRelaySubject");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Receiver");

                    b.Property<string>("RedirectUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("RedirectUrl");

                    b.HasKey("NotificationRelayId");

                    b.ToTable("NotificationRelays");
                });

            modelBuilder.Entity("AMMasterProject.Models.RevenueCreditPackage", b =>
                {
                    b.Property<int>("RevenueCreditID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RevenueCreditID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevenueCreditID"));

                    b.Property<decimal>("CreditAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CreditImage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("CurrencyID")
                        .HasColumnType("int")
                        .HasColumnName("CurrencyId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsExpiry")
                        .HasColumnType("bit")
                        .HasColumnName("IsExpiry");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublish");

                    b.Property<bool>("IsRecommended")
                        .HasColumnType("bit")
                        .HasColumnName("IsRecommended");

                    b.Property<int>("NoofCredit")
                        .HasColumnType("int")
                        .HasColumnName("NoofCredit");

                    b.Property<int?>("NoofExpiryDays")
                        .HasColumnType("int")
                        .HasColumnName("NoofExpiryDays");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.Property<string>("RevenueCreditName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("RevenueCreditName");

                    b.Property<int>("Sortnumber")
                        .HasColumnType("int")
                        .HasColumnName("Sortnumber");

                    b.HasKey("RevenueCreditID");

                    b.ToTable("RevenueCreditPackage");
                });

            modelBuilder.Entity("AMMasterProject.Models.RevenueSubscriptionPackage", b =>
                {
                    b.Property<int>("RevenueSubscriptionPackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RevenueSubscriptionPackageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevenueSubscriptionPackageID"));

                    b.Property<decimal>("CreditAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("CreditAmount");

                    b.Property<int>("CurrencyID")
                        .HasColumnType("int")
                        .HasColumnName("CurrencyId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublish");

                    b.Property<bool>("IsRecommended")
                        .HasColumnType("bit")
                        .HasColumnName("IsRecommended");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.Property<int>("RecurringPeriodInDays")
                        .HasColumnType("int")
                        .HasColumnName("RecurringPeriodInDays");

                    b.Property<string>("RevenuePackageName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("RevenuePackageName");

                    b.Property<int>("Sortnumber")
                        .HasColumnType("int")
                        .HasColumnName("Sortnumber");

                    b.Property<string>("SubscriptionImage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("RevenueSubscriptionPackageID");

                    b.ToTable("RevenueSubscriptionPackage");
                });

            modelBuilder.Entity("AMMasterProject.Models.UserWallet", b =>
                {
                    b.Property<int>("UserWalletID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserWalletID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserWalletID"));

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("InvoiceNumber");

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit")
                        .HasColumnName("IsApplied");

                    b.Property<int>("ProfileID")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Type");

                    b.Property<string>("UserWalletMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UserWalletMetaData");

                    b.HasKey("UserWalletID");

                    b.ToTable("UserWallets");
                });

            modelBuilder.Entity("AMMasterProject.OrderMaster", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("AdminNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("AdminNotes");

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("InvoiceNumber");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsExpiry")
                        .HasColumnType("bit");

                    b.Property<string>("ItemMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ItemMetaData");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ItemType");

                    b.Property<string>("OrderChargesMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OrderChargesMetaData");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("OrderDate");

                    b.Property<string>("OrderProcessStatus")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("OrderProcessStatus");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("OrderStatus");

                    b.Property<string>("OrderStatusMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OrderStatusMetaData");

                    b.Property<string>("OtherMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OtherMetaData");

                    b.Property<string>("PaymentMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PaymentMetaData");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PaymentStatus");

                    b.Property<string>("ReviewMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ReviewMetaData");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<string>("ShippingMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ShippingMetaData");

                    b.Property<string>("SummaryMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SummaryMetaData");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TransactionType");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate");

                    b.Property<string>("VariationMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VariationMetaData");

                    b.Property<string>("VendorNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("VendorNotes");

                    b.HasKey("OrderId");

                    b.ToTable("OrderMasters");
                });

            modelBuilder.Entity("AMMasterProject.PageCategory", b =>
                {
                    b.Property<int>("PageCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PageCategoryId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Category");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublish");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.HasKey("PageCategoryId");

                    b.ToTable("PageCategory");
                });

            modelBuilder.Entity("AMMasterProject.PageName", b =>
                {
                    b.Property<int>("PageNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PageNameId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PageNameId"));

                    b.Property<string>("CMSKey")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<bool>("IsAdminDefine")
                        .HasColumnType("bit")
                        .HasColumnName("IsAdminDefine");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublish");

                    b.Property<bool>("IsUrl")
                        .HasColumnType("bit")
                        .HasColumnName("IsURL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PageName");

                    b.Property<string>("PageCSS")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PageCSS");

                    b.Property<int>("PageCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("PageCategoryId");

                    b.Property<string>("PageDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PageDescription");

                    b.Property<string>("PageHTML")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PageHTML");

                    b.Property<string>("PageJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PageJson");

                    b.Property<string>("PageType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PageType");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    b.Property<string>("SeoDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEODescription");

                    b.Property<string>("SeoKeyword")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEOKeyword");

                    b.Property<string>("SeoPageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOPageName");

                    b.Property<string>("SeoTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SEOTitle");

                    b.Property<int>("Sortnumber")
                        .HasColumnType("int")
                        .HasColumnName("Sortnumber");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Type");

                    b.Property<string>("Url")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("URL");

                    b.HasKey("PageNameId");

                    b.ToTable("PageName");
                });

            modelBuilder.Entity("AMMasterProject.ProductAmenitiesOptionsV2", b =>
                {
                    b.Property<int>("ProductAmenitiesOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductAmenitiesOptionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductAmenitiesOptionId"));

                    b.Property<bool?>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<string>("ProductAmenitiesIcon")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ProductAmenitiesId")
                        .HasColumnType("int");

                    b.Property<string>("ProductAmenitiesName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("ProductAmenitiesOptionId")
                        .HasName("PK_Product_Amenities_Options");

                    b.ToTable("Product_Amenities_Options_V2");
                });

            modelBuilder.Entity("AMMasterProject.ProductAmenitiesQuestionV2", b =>
                {
                    b.Property<int>("ProductAmenitiesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductAmenitiesId"));

                    b.Property<string>("ControlType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<string>("ProductAmenitiesHeading")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("SortNumber")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductAmenitiesId")
                        .HasName("PK_Product_Amenities_V2");

                    b.ToTable("Product_AmenitiesQuestion_V2");
                });

            modelBuilder.Entity("AMMasterProject.ProductAttributeOptionV2", b =>
                {
                    b.Property<int>("ProductAttributeOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductAttributeOptionId"));

                    b.Property<string>("Attributeimage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("attributeimage");

                    b.Property<decimal>("Attributeprice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("attributeprice");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("ProductAttributeGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductAttributeGUID");

                    b.HasKey("ProductAttributeOptionId");

                    b.ToTable("Product_AttributeOption_V2");
                });

            modelBuilder.Entity("AMMasterProject.ProductAttributeQuestionV2", b =>
                {
                    b.Property<int>("ProductAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductAttributeId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProductAttributeGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductAttributeGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("ProductGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductGUID");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ProductAttributeId")
                        .HasName("PK_ProductAttribute_Master");

                    b.ToTable("Product_AttributeQuestion_V2");
                });

            modelBuilder.Entity("AMMasterProject.ProductBoost", b =>
                {
                    b.Property<int>("ProductBoostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductBoostId"));

                    b.Property<string>("BoostMetaData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoostType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("ItemBoostGUID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ItemBoostGUID");

                    b.Property<int>("ItemID")
                        .HasColumnType("int")
                        .HasColumnName("ItemID");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("ProductBoostId");

                    b.ToTable("Product_Boost");
                });

            modelBuilder.Entity("AMMasterProject.ProductCoupon", b =>
                {
                    b.Property<int>("ProductCouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductCouponId"));

                    b.Property<decimal>("AdminPercentage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CouponDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CouponDescription");

                    b.Property<string>("CouponName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CouponName");

                    b.Property<int>("CouponTypeId")
                        .HasColumnType("int")
                        .HasColumnName("CouponTypeId");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("DiscountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DiscountType");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<int>("NoofCoupon")
                        .HasColumnType("int")
                        .HasColumnName("NoofCoupon");

                    b.Property<int>("PerPersonUsed")
                        .HasColumnType("int")
                        .HasColumnName("PerPersonUsed");

                    b.Property<Guid>("ProductCouponGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductCouponGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<decimal>("SellerPercentage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("ProductCouponId");

                    b.ToTable("Product_Coupon");
                });

            modelBuilder.Entity("AMMasterProject.ProductCouponChild", b =>
                {
                    b.Property<int>("ProductCouponChildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductCouponChildId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ProductCouponChildGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductCouponChildGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("ProductCouponId")
                        .HasColumnType("int")
                        .HasColumnName("ProductCouponId");

                    b.Property<int>("ReferenceId")
                        .HasColumnType("int")
                        .HasColumnName("ReferenceId");

                    b.Property<int>("ReferenceTypeID")
                        .HasColumnType("int")
                        .HasColumnName("ReferenceTypeID");

                    b.HasKey("ProductCouponChildId");

                    b.ToTable("Product_Coupon_Child");
                });

            modelBuilder.Entity("AMMasterProject.ProductQuestion", b =>
                {
                    b.Property<int>("ProductQaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductQAId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductQaid"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("ProductQaid")
                        .HasName("PK_Product_Question_Answer");

                    b.ToTable("Product_Question");
                });

            modelBuilder.Entity("AMMasterProject.ProductQuestionAnswer", b =>
                {
                    b.Property<int>("ProductAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductAnswerId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductQaid")
                        .HasColumnType("int")
                        .HasColumnName("ProductQAId");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Qanswer")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("QAnswer");

                    b.HasKey("ProductAnswerId")
                        .HasName("PK_Product_Question_Answer_1");

                    b.ToTable("Product_Question_Answer");
                });

            modelBuilder.Entity("AMMasterProject.ProductRelatedProduct", b =>
                {
                    b.Property<int>("ProductRelatedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductRelatedId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ProductGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductGUID");

                    b.Property<int?>("RelatedProductId")
                        .HasColumnType("int")
                        .HasColumnName("RelatedProductID");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.HasKey("ProductRelatedId");

                    b.ToTable("Product_RelatedProducts");
                });

            modelBuilder.Entity("AMMasterProject.ProductTaxV2", b =>
                {
                    b.Property<int>("ProductTaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductTaxId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ProductGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductGUID");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("TaxClassId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ProductTaxId");

                    b.ToTable("Product_Tax_V2");
                });

            modelBuilder.Entity("AMMasterProject.SetupTaxClass", b =>
                {
                    b.Property<int>("TaxClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TaxClassID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaxClassId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsAdminApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("TaxClass")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("TaxClassGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TaxClassGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TaxClassId");

                    b.ToTable("Setup_TaxClass");
                });

            modelBuilder.Entity("AMMasterProject.UsersProfile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProfileId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileId"));

                    b.Property<string>("About")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("About");

                    b.Property<string>("Address")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Address");

                    b.Property<string>("AdminRemarksOnLocked")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("AdminRemarksOnLocked");

                    b.Property<string>("AdminStatusMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AdminStatusMetaData");

                    b.Property<string>("AnnouncementMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AnnouncementMetaData");

                    b.Property<string>("AvailabilitySetupMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AvailabilitySetupMetaData");

                    b.Property<string>("BusinessDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("BusinessDescription");

                    b.Property<string>("BusinessMetaData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("BusinessMetaData");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BusinessName");

                    b.Property<int?>("BusinessType")
                        .HasColumnType("int")
                        .HasColumnName("BusinessType");

                    b.Property<string>("BusinessUrlpath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BusinessURLPath");

                    b.Property<string>("CertificateProofMetaData")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("CertificateProofMetaData");

                    b.Property<string>("ClientDisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ClientDisplayName");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactNumber");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Email");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Firstname");

                    b.Property<string>("IdentityProofMetaData")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("IdentityProofMetaData");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLockedByAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("IsLockedByAdmin");

                    b.Property<bool?>("IsUserNameVerified")
                        .HasColumnType("bit")
                        .HasColumnName("IsUserNameVerified");

                    b.Property<DateTime?>("Lastlogin")
                        .HasColumnType("datetime2")
                        .HasColumnName("Lastlogin");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Lastname");

                    b.Property<string>("Loginchannel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Loginchannel");

                    b.Property<string>("OtherMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OtherMetaData");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Password");

                    b.Property<string>("PrimaryAddressMetaData")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PrimaryAddressMetaData");

                    b.Property<Guid>("ProfileGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProfileGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ProfileImage");

                    b.Property<string>("ProfileVerificationMetaData")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("ProfileVerificationMetaData");

                    b.Property<string>("Provider")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SecondaryAddressMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SecondaryAddressMetaData");

                    b.Property<string>("SecondaryContactMetaData")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("SecondaryContactMetaData");

                    b.Property<string>("SellerCoverImage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("SellerCoverImage");

                    b.Property<string>("SellerDisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SellerDisplayName");

                    b.Property<string>("SellerImage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("SellerImage");

                    b.Property<string>("SellerPayAccountMetaData")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)")
                        .HasColumnName("SellerPayAccountMetaData");

                    b.Property<string>("SellerVideoURl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("SellerVideoURL");

                    b.Property<string>("SocialMediaMetaData")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("SocialMediaMetaData");

                    b.Property<string>("TeamMembersMetaData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TeamMembersMetaData");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("UserType");

                    b.Property<DateTime?>("UnLockedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UnLockedDate");

                    b.Property<string>("UserName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("UserName");

                    b.HasKey("ProfileId");

                    b.ToTable("Users_Profile");
                });

            modelBuilder.Entity("AMMasterProject.VendorFollow", b =>
                {
                    b.Property<int>("FollowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FollowerId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("FollowerId");

                    b.ToTable("Vendor_Follow");
                });

            modelBuilder.Entity("AMMasterProject.Websetting", b =>
                {
                    b.Property<int>("WebsettingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WebsettingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebsettingID"));

                    b.Property<string>("WebsettingKey")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("WebsettingKey");

                    b.Property<string>("WebsettingValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WebsettingValue");

                    b.HasKey("WebsettingID");

                    b.ToTable("Websetting");
                });

            modelBuilder.Entity("AMMasterProject.WebsiteSetupSocialMedia", b =>
                {
                    b.Property<int>("SocialMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SocialMediaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SocialMediaId"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Icon");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublish");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("URL");

                    b.HasKey("SocialMediaId");

                    b.ToTable("WebsiteSetupSocialMedia");
                });

            modelBuilder.Entity("AMMasterProject.WebsitesetupPartner", b =>
                {
                    b.Property<int>("PartnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PartnerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartnerId"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Image");

                    b.Property<DateTime?>("Insertdate")
                        .HasColumnType("date");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<bool>("Isaddonhomepage")
                        .HasColumnType("bit")
                        .HasColumnName("showonhomepage");

                    b.Property<string>("ParnerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ParnertName");

                    b.Property<Guid>("PartnerGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PartnerGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Partnerurl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("partnerurl");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<int>("Sortorder")
                        .HasColumnType("int")
                        .HasColumnName("sortorder");

                    b.HasKey("PartnerId");

                    b.ToTable("Websitesetup_Partner");
                });

            modelBuilder.Entity("AMMasterProject.WebsitesetupTeam", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TeamID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Designation");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Image");

                    b.Property<DateTime?>("Insertdate")
                        .HasColumnType("date");

                    b.Property<bool>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<int>("Sortorder")
                        .HasColumnType("int")
                        .HasColumnName("sortorder");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Summary");

                    b.HasKey("TeamId");

                    b.ToTable("Websitesetup_Team");
                });
#pragma warning restore 612, 618
        }
    }
}
